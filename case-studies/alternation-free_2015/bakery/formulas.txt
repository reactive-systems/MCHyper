


Models used:
1. good_bakery.v: Original bakery impelementation from the VIS benchmark collection version 1.3. It is a model with 3 processes and can be scaled easily to more processes. (Not used in the paper)
2. good_bakery.plain.v: Original bakery implementation, exchanged enum type by explicit numbers to make it compile properly with vl2mv. (Abbreviated in the paper as model "bakery")
3. good_bakery.atom.v: Modified bakery by contracting several statements into one step. This ensure that the execution times are symmetric again, which would be difficult to realize with a modified property. In the original model (good_bakery.v) the timing was inherently asymmetric. We preserved the behavior that the loop can break when a comparison fails. (Abbreviated in the paper as model "bakery.a")
4. good_bakery.atom.nondet.v: Same as good_bakery.atom.v, but we replaced the comparison of process IDs "k < sel" by a nondeterministic choice "k == sym_break". The nondeterministic choice 'sym_break' is modeled as an input. This allows us to control in the input (and thus in the formula) which process moves next. (Abbreviated in the paper as model "bakery.a.n")
5. good_bakery.atom.nondet2.v: In the previous model, the state of the comparison to other models was saved, when a process had to wait. In this model, the state of the comparison is resetted. Performance of this protocol may be worse, but it is symmetric. (Abbreviated in the paper as model "bakery.a.n.s")
6. good_bakery.atom.nondet2.proc5.v: Increased the number of participants to 5. (Abbreviated in the paper as model "bakery.a.n.s.5proc")
6. good_bakery.atom.nondet2.proc7.v: Increased the number of participants to 7. (Abbreviated in the paper as model "bakery.a.n.s.7proc")
7. good_bakery.atom.nondet2.proc30.v: Increased the number of participants to 30. This file was optimized in ABC using the command (dfraig; rewrite; dfraig)

To increase the confidence in the models and the transformations, we checked the verilog files and the .aag files for mutual exclusion and reachability of the critical section.

Properties used:
1. Plain symmetry - symmetric choice of processes to move and symmetric pause commands imply symmetric progress of program counters: 

"Forall (Forall (Implies (G (And (Neq (AP \"select<0>\" 0) (AP \"select<0>\" 1)) (And (Neq (AP \"select<0>\" 0) (AP \"select<0>\" 1)) (Eq (AP \"pause\" 0) (AP \"pause\" 1))))) (G (And (And (Eq (AP \"bakery|pc<*0*><0>_out\" 0) (AP \"bakery|pc<*1*><0>_out\" 1)) (Eq (AP \"bakery|pc<*0*><0>_out\" 1) (AP \"bakery|pc<*1*><0>_out\" 0))) (And (And (Eq (AP \"bakery|pc<*0*><1>_out\" 0) (AP \"bakery|pc<*1*><1>_out\" 1)) (Eq (AP \"bakery|pc<*0*><1>_out\" 1) (AP \"bakery|pc<*1*><1>_out\" 0))) (And (And (Eq (AP \"bakery|pc<*0*><2>_out\" 0) (AP \"bakery|pc<*1*><2>_out\" 1)) (Eq (AP \"bakery|pc<*0*><2>_out\" 1) (AP \"bakery|pc<*1*><2>_out\" 0))) (And (Eq (AP \"bakery|pc<*0*><3>_out\" 0) (AP \"bakery|pc<*1*><3>_out\" 1)) (Eq (AP \"bakery|pc<*0*><3>_out\" 1) (AP \"bakery|pc<*1*><3>_out\" 0)))))))))"

2. Symmetry only for existing process IDs: 

"Forall (Forall (Implies (G (And (And (Implies (AP \"select<1>\" 0) (Neg (AP \"select<0>\" 0))) (Implies (AP \"select<1>\" 1) (Neg (AP \"select<0>\" 1)))) (And (And (Eq (AP \"select<1>\" 0) (AP \"select<1>\" 1)) (Implies (Neg (AP \"select<1>\" 0)) (Neq (AP \"select<0>\" 0) (AP \"select<0>\" 1)))) (Eq (AP \"pause\" 0) (AP \"pause\" 1))))) (G (And (And (Eq (AP \"bakery|pc<*0*><0>_out\" 0) (AP \"bakery|pc<*1*><0>_out\" 1)) (Eq (AP \"bakery|pc<*0*><0>_out\" 1) (AP \"bakery|pc<*1*><0>_out\" 0))) (And (And (Eq (AP \"bakery|pc<*0*><1>_out\" 0) (AP \"bakery|pc<*1*><1>_out\" 1)) (Eq (AP \"bakery|pc<*0*><1>_out\" 1) (AP \"bakery|pc<*1*><1>_out\" 0))) (And (And (Eq (AP \"bakery|pc<*0*><2>_out\" 0) (AP \"bakery|pc<*1*><2>_out\" 1)) (Eq (AP \"bakery|pc<*0*><2>_out\" 1) (AP \"bakery|pc<*1*><2>_out\" 0))) (And (Eq (AP \"bakery|pc<*0*><3>_out\" 0) (AP \"bakery|pc<*1*><3>_out\" 1)) (Eq (AP \"bakery|pc<*0*><3>_out\" 1) (AP \"bakery|pc<*1*><3>_out\" 0)))))))))"

3. Symmetry for existing process IDs and with symmetric resolution of the symmetry breaking input. This property was the first successful symmetry check. It proves that when the processes are selected to move symmetrically the only asymmetry is due to the necessary symmetry breaking. 

"Forall (Forall (Implies (G (And (And (Neq (AP \"sym_break<0>\" 0) (AP \"sym_break<0>\" 1)) (And (Neg (AP \"sym_break<1>\" 0)) (Neg (AP \"sym_break<1>\" 1)))) (And (And (Implies (AP \"select<1>\" 0) (Neg (AP \"select<0>\" 0))) (Implies (AP \"select<1>\" 1) (Neg (AP \"select<0>\" 1)))) (And (And (Eq (AP \"select<1>\" 0) (AP \"select<1>\" 1)) (Implies (Neg (AP \"select<1>\" 0)) (Neq (AP \"select<0>\" 0) (AP \"select<0>\" 1)))) (Eq (AP \"pause\" 0) (AP \"pause\" 1)))))) (G (And (And (Eq (AP \"bakery|pc<*0*><0>_out\" 0) (AP \"bakery|pc<*1*><0>_out\" 1)) (Eq (AP \"bakery|pc<*0*><0>_out\" 1) (AP \"bakery|pc<*1*><0>_out\" 0))) (And (And (Eq (AP \"bakery|pc<*0*><1>_out\" 0) (AP \"bakery|pc<*1*><1>_out\" 1)) (Eq (AP \"bakery|pc<*0*><1>_out\" 1) (AP \"bakery|pc<*1*><1>_out\" 0))) (And (And (Eq (AP \"bakery|pc<*0*><2>_out\" 0) (AP \"bakery|pc<*1*><2>_out\" 1)) (Eq (AP \"bakery|pc<*0*><2>_out\" 1) (AP \"bakery|pc<*1*><2>_out\" 0))) (And (Eq (AP \"bakery|pc<*0*><3>_out\" 0) (AP \"bakery|pc<*1*><3>_out\" 1)) (Eq (AP \"bakery|pc<*0*><3>_out\" 1) (AP \"bakery|pc<*1*><3>_out\" 0)))))))))"

4. Reformulation of property (3.) using a weak until. Equivalence of the properties is due to input enabledness. 

"Forall (Forall (WUntil (And (And (Eq (AP \"bakery|pc<*0*><0>_out\" 0) (AP \"bakery|pc<*1*><0>_out\" 1)) (Eq (AP \"bakery|pc<*0*><0>_out\" 1) (AP \"bakery|pc<*1*><0>_out\" 0))) (And (And (Eq (AP \"bakery|pc<*0*><1>_out\" 0) (AP \"bakery|pc<*1*><1>_out\" 1)) (Eq (AP \"bakery|pc<*0*><1>_out\" 1) (AP \"bakery|pc<*1*><1>_out\" 0))) (And (And (Eq (AP \"bakery|pc<*0*><2>_out\" 0) (AP \"bakery|pc<*1*><2>_out\" 1)) (Eq (AP \"bakery|pc<*0*><2>_out\" 1) (AP \"bakery|pc<*1*><2>_out\" 0))) (And (Eq (AP \"bakery|pc<*0*><3>_out\" 0) (AP \"bakery|pc<*1*><3>_out\" 1)) (Eq (AP \"bakery|pc<*0*><3>_out\" 1) (AP \"bakery|pc<*1*><3>_out\" 0)))))) (Neg (And (And (Eq (AP \"sym_break<1>\" 0) (AP \"sym_break<1>\" 1)) (And (And (Implies (AP \"sym_break<1>\" 0) (Neg (AP \"sym_break<0>\" 0))) (Implies (AP \"sym_break<1>\" 1) (Neg (AP \"sym_break<0>\" 1)))) (Implies (Neg (AP \"sym_break<1>\" 0)) (Neq (AP \"sym_break<0>\" 0) (AP \"sym_break<0>\" 1))))) (And (And (Implies (AP \"select<1>\" 0) (Neg (AP \"select<0>\" 0))) (Implies (AP \"select<1>\" 1) (Neg (AP \"select<0>\" 1)))) (And (And (Eq (AP \"select<1>\" 0) (AP \"select<1>\" 1)) (Implies (Neg (AP \"select<1>\" 0)) (Neq (AP \"select<0>\" 0) (AP \"select<0>\" 1)))) (Eq (AP \"pause\" 0) (AP \"pause\" 1))))))))"

5. Extended property (3.) to more processes. Needed for model good_bakery.atom.nondet2.proc5.v

"Forall (Forall (Implies (G (And (And (And (And (Eq (AP \"sym_break<2>\" 0) (AP \"sym_break<2>\" 1)) (Eq (AP \"sym_break<1>\" 0) (AP \"sym_break<1>\" 1))) (And (And (And (Implies (AP \"sym_break<2>\" 0) (And (Neg (AP \"sym_break<1>\" 0)) (Neg (AP \"sym_break<0>\" 0)))) (Implies (AP \"sym_break<2>\" 1) (And (Neg (AP \"sym_break<1>\" 1)) (Neg (AP \"sym_break<0>\" 1))))) (And (Implies (AP \"sym_break<1>\" 0) (Neg (AP \"sym_break<0>\" 0))) (Implies (AP \"sym_break<1>\" 1) (Neg (AP \"sym_break<0>\" 1))))) (Implies (And (Neg (AP \"sym_break<2>\" 0)) (Neg (AP \"sym_break<1>\" 0))) (Neq (AP \"sym_break<0>\" 0) (AP \"sym_break<0>\" 1))))) (And (And (Eq (AP \"select<2>\" 0) (AP \"select<2>\" 1)) (Eq (AP \"select<1>\" 0) (AP \"select<1>\" 1))) (And (And (And (Implies (AP \"select<2>\" 0) (And (Neg (AP \"select<1>\" 0)) (Neg (AP \"select<0>\" 0)))) (Implies (AP \"select<1>\" 1) (And (Neg (AP \"select<1>\" 1)) (Neg (AP \"select<0>\" 1))))) (And (Implies (AP \"select<1>\" 0) (Neg (AP \"select<0>\" 0))) (Implies (AP \"select<2>\" 1) (Neg (AP \"select<0>\" 1))))) (Implies (And (Neg (AP \"select<2>\" 0)) (Neg (AP \"select<1>\" 0))) (Neq (AP \"select<0>\" 0) (AP \"select<0>\" 1)))))) (Eq (AP \"pause\" 0) (AP \"pause\" 1)))) (G (And (And (Eq (AP \"bakery|pc<*0*><0>_out\" 0) (AP \"bakery|pc<*1*><0>_out\" 1)) (Eq (AP \"bakery|pc<*0*><0>_out\" 1) (AP \"bakery|pc<*1*><0>_out\" 0))) (And (And (Eq (AP \"bakery|pc<*0*><1>_out\" 0) (AP \"bakery|pc<*1*><1>_out\" 1)) (Eq (AP \"bakery|pc<*0*><1>_out\" 1) (AP \"bakery|pc<*1*><1>_out\" 0))) (And (And (Eq (AP \"bakery|pc<*0*><2>_out\" 0) (AP \"bakery|pc<*1*><2>_out\" 1)) (Eq (AP \"bakery|pc<*0*><2>_out\" 1) (AP \"bakery|pc<*1*><2>_out\" 0))) (And (Eq (AP \"bakery|pc<*0*><3>_out\" 0) (AP \"bakery|pc<*1*><3>_out\" 1)) (Eq (AP \"bakery|pc<*0*><3>_out\" 1) (AP \"bakery|pc<*1*><3>_out\" 0)))))))))"

6. Reformulation of property (5.) using a weak until. Equivalence of the properties is due to input enabledness. 

"Forall (Forall (WUntil (And (And (Eq (AP \"bakery|pc<*0*><0>_out\" 0) (AP \"bakery|pc<*1*><0>_out\" 1)) (Eq (AP \"bakery|pc<*0*><0>_out\" 1) (AP \"bakery|pc<*1*><0>_out\" 0))) (And (And (Eq (AP \"bakery|pc<*0*><1>_out\" 0) (AP \"bakery|pc<*1*><1>_out\" 1)) (Eq (AP \"bakery|pc<*0*><1>_out\" 1) (AP \"bakery|pc<*1*><1>_out\" 0))) (And (And (Eq (AP \"bakery|pc<*0*><2>_out\" 0) (AP \"bakery|pc<*1*><2>_out\" 1)) (Eq (AP \"bakery|pc<*0*><2>_out\" 1) (AP \"bakery|pc<*1*><2>_out\" 0))) (And (Eq (AP \"bakery|pc<*0*><3>_out\" 0) (AP \"bakery|pc<*1*><3>_out\" 1)) (Eq (AP \"bakery|pc<*0*><3>_out\" 1) (AP \"bakery|pc<*1*><3>_out\" 0)))))) (Neg (And (And (And (And (Eq (AP \"sym_break<2>\" 0) (AP \"sym_break<2>\" 1)) (Eq (AP \"sym_break<1>\" 0) (AP \"sym_break<1>\" 1))) (And (And (And (Implies (AP \"sym_break<2>\" 0) (And (Neg (AP \"sym_break<1>\" 0)) (Neg (AP \"sym_break<0>\" 0)))) (Implies (AP \"sym_break<2>\" 1) (And (Neg (AP \"sym_break<1>\" 1)) (Neg (AP \"sym_break<0>\" 1))))) (And (Implies (AP \"sym_break<1>\" 0) (Neg (AP \"sym_break<0>\" 0))) (Implies (AP \"sym_break<1>\" 1) (Neg (AP \"sym_break<0>\" 1))))) (Implies (And (Neg (AP \"sym_break<2>\" 0)) (Neg (AP \"sym_break<1>\" 0))) (Neq (AP \"sym_break<0>\" 0) (AP \"sym_break<0>\" 1))))) (And (And (Eq (AP \"select<2>\" 0) (AP \"select<2>\" 1)) (Eq (AP \"select<1>\" 0) (AP \"select<1>\" 1))) (And (And (And (Implies (AP \"select<2>\" 0) (And (Neg (AP \"select<1>\" 0)) (Neg (AP \"select<0>\" 0)))) (Implies (AP \"select<1>\" 1) (And (Neg (AP \"select<1>\" 1)) (Neg (AP \"select<0>\" 1))))) (And (Implies (AP \"select<1>\" 0) (Neg (AP \"select<0>\" 0))) (Implies (AP \"select<2>\" 1) (Neg (AP \"select<0>\" 1))))) (Implies (And (Neg (AP \"select<2>\" 0)) (Neg (AP \"select<1>\" 0))) (Neq (AP \"select<0>\" 0) (AP \"select<0>\" 1)))))) (Eq (AP \"pause\" 0) (AP \"pause\" 1))))))"

7. Reformulation of property (6.) to 7 processes. Needed for model good_bakery.atom.nondet2.proc7.v

"Forall (Forall (WUntil ((And (And (Eq (AP \"bakery|pc<*0*><0>_out\" 0) (AP \"bakery|pc<*1*><0>_out\" 1)) (Eq (AP \"bakery|pc<*0*><0>_out\" 1) (AP \"bakery|pc<*1*><0>_out\" 0))) (And (And (Eq (AP \"bakery|pc<*0*><1>_out\" 0) (AP \"bakery|pc<*1*><1>_out\" 1)) (Eq (AP \"bakery|pc<*0*><1>_out\" 1) (AP \"bakery|pc<*1*><1>_out\" 0))) (And (And (Eq (AP \"bakery|pc<*0*><2>_out\" 0) (AP \"bakery|pc<*1*><2>_out\" 1)) (Eq (AP \"bakery|pc<*0*><2>_out\" 1) (AP \"bakery|pc<*1*><2>_out\" 0))) (And (Eq (AP \"bakery|pc<*0*><3>_out\" 0) (AP \"bakery|pc<*1*><3>_out\" 1)) (Eq (AP \"bakery|pc<*0*><3>_out\" 1) (AP \"bakery|pc<*1*><3>_out\" 0))))))) (Neg (And (And (And (Neg (And (AP \"sym_break<2>\" 1) (And (AP \"sym_break<1>\" 1) (AP \"sym_break<0>\" 1)))) (And (And (Eq (AP \"sym_break<2>\" 0) (AP \"sym_break<2>\" 1)) (Eq (AP \"sym_break<1>\" 0) (AP \"sym_break<1>\" 1))) (Eq (And (Neg (AP \"sym_break<2>\" 0)) (Neg (AP \"sym_break<1>\" 0))) (Neq (AP \"sym_break<0>\" 0) (AP \"sym_break<0>\" 1))))) (And (Neg (And (AP \"select<2>\" 1) (And (AP \"select<1>\" 1) (AP \"select<0>\" 1)))) (And (And (Eq (AP \"select<2>\" 0) (AP \"select<2>\" 1)) (Eq (AP \"select<1>\" 0) (AP \"select<1>\" 1))) (Eq (And (Neg (AP \"select<2>\" 0)) (Neg (AP \"select<1>\" 0))) (Neq (AP \"select<0>\" 0) (AP \"select<0>\" 1)))))) (Eq (AP \"pause\" 0) (AP \"pause\" 1))))))"

8. Reformulation of property (6.) to 30 processes. Needed for model good_bakery.atom.nondet2.proc30.v

"Forall (Forall (WUntil (And (And (Eq (AP \"bakery|pc<*0*><0>_out\" 0) (AP \"bakery|pc<*1*><0>_out\" 1)) (Eq (AP \"bakery|pc<*0*><0>_out\" 1) (AP \"bakery|pc<*1*><0>_out\" 0))) (And (And (Eq (AP \"bakery|pc<*0*><1>_out\" 0) (AP \"bakery|pc<*1*><1>_out\" 1)) (Eq (AP \"bakery|pc<*0*><1>_out\" 1) (AP \"bakery|pc<*1*><1>_out\" 0))) (And (And (Eq (AP \"bakery|pc<*0*><2>_out\" 0) (AP \"bakery|pc<*1*><2>_out\" 1)) (Eq (AP \"bakery|pc<*0*><2>_out\" 1) (AP \"bakery|pc<*1*><2>_out\" 0))) (And (Eq (AP \"bakery|pc<*0*><3>_out\" 0) (AP \"bakery|pc<*1*><3>_out\" 1)) (Eq (AP \"bakery|pc<*0*><3>_out\" 1) (AP \"bakery|pc<*1*><3>_out\" 0))))))   (Neg (And (And (And (Neg (And (AP \"sym_break<4>\" 1) (And (AP \"sym_break<3>\" 1) (And (AP \"sym_break<2>\" 1) (And (AP \"sym_break<1>\" 1) (AP \"sym_break<0>\" 1)))))) (And (And (Eq (AP \"sym_break<4>\" 0) (AP \"sym_break<4>\" 1)) (And (Eq (AP \"sym_break<3>\" 0) (AP \"sym_break<3>\" 1)) (And (Eq (AP \"sym_break<2>\" 0) (AP \"sym_break<2>\" 1)) (Eq (AP \"sym_break<1>\" 0) (AP \"sym_break<1>\" 1))))) (Eq (And (Neg (AP \"sym_break<4>\" 0)) (And (Neg (AP \"sym_break<3>\" 0)) (And (Neg (AP \"sym_break<2>\" 0)) (Neg (AP \"sym_break<1>\" 0))))) (Neq (AP \"sym_break<0>\" 0) (AP \"sym_break<0>\" 1))))) (And (Neg (And (AP \"select<4>\" 1) (And (AP \"select<3>\" 1) (And (AP \"select<2>\" 1) (And (AP \"select<1>\" 1) (AP \"select<0>\" 1)))))) (And (And (Eq (AP \"select<4>\" 0) (AP \"select<4>\" 1)) (And (Eq (AP \"select<3>\" 0) (AP \"select<3>\" 1)) (And (Eq (AP \"select<2>\" 0) (AP \"select<2>\" 1)) (Eq (AP \"select<1>\" 0) (AP \"select<1>\" 1))))) (Eq (And (Neg (AP \"select<4>\" 0)) (And (Neg (AP \"select<3>\" 0)) (And (Neg (AP \"select<2>\" 0)) (Neg (AP \"select<1>\" 0))))) (Neq (AP \"select<0>\" 0) (AP \"select<0>\" 1)))))) (Eq (AP \"pause\" 0) (AP \"pause\" 1))))))"





EXPERIMENTS:

The counterexamples and invariants provided were generated by the PDR engine of ABC. Written with ABC commands 'pdr; write_cex -f <filename>' and 'pdr -d'. Time measured concerns only the time of the ABC model checking run. The run time of mchyper always was negligible compared to the model checking. 

Experiment Sym1: good_bakery.plain.v checked for symmetry property (1.). Found counterexample in 6.34 seconds: experiment1.cex

./../../../mchyper.py -f "Forall (Forall (Implies (G (And (Neq (AP \"select<0>\" 0) (AP \"select<0>\" 1)) (And (Neq (AP \"select<0>\" 0) (AP \"select<0>\" 1)) (Eq (AP \"pause\" 0) (AP \"pause\" 1))))) (G (And (And (Eq (AP \"bakery|pc<*0*><0>_out\" 0) (AP \"bakery|pc<*1*><0>_out\" 1)) (Eq (AP \"bakery|pc<*0*><0>_out\" 1) (AP \"bakery|pc<*1*><0>_out\" 0))) (And (And (Eq (AP \"bakery|pc<*0*><1>_out\" 0) (AP \"bakery|pc<*1*><1>_out\" 1)) (Eq (AP \"bakery|pc<*0*><1>_out\" 1) (AP \"bakery|pc<*1*><1>_out\" 0))) (And (And (Eq (AP \"bakery|pc<*0*><2>_out\" 0) (AP \"bakery|pc<*1*><2>_out\" 1)) (Eq (AP \"bakery|pc<*0*><2>_out\" 1) (AP \"bakery|pc<*1*><2>_out\" 0))) (And (Eq (AP \"bakery|pc<*0*><3>_out\" 0) (AP \"bakery|pc<*1*><3>_out\" 1)) (Eq (AP \"bakery|pc<*0*><3>_out\" 1) (AP \"bakery|pc<*1*><3>_out\" 0)))))))))" ./good_bakery.plain.aag -pdr -cex

Experiment Sym2. good_bakery.plain.v checked for symmetry property (2.). Found counterexample in 168.59 seconds: experiment2.cex

./../../../mchyper.py -f "Forall (Forall (Implies (G (And (And (Implies (AP \"select<1>\" 0) (Neg (AP \"select<0>\" 0))) (Implies (AP \"select<1>\" 1) (Neg (AP \"select<0>\" 1)))) (And (And (Eq (AP \"select<1>\" 0) (AP \"select<1>\" 1)) (Implies (Neg (AP \"select<1>\" 0)) (Neq (AP \"select<0>\" 0) (AP \"select<0>\" 1)))) (Eq (AP \"pause\" 0) (AP \"pause\" 1))))) (G (And (And (Eq (AP \"bakery|pc<*0*><0>_out\" 0) (AP \"bakery|pc<*1*><0>_out\" 1)) (Eq (AP \"bakery|pc<*0*><0>_out\" 1) (AP \"bakery|pc<*1*><0>_out\" 0))) (And (And (Eq (AP \"bakery|pc<*0*><1>_out\" 0) (AP \"bakery|pc<*1*><1>_out\" 1)) (Eq (AP \"bakery|pc<*0*><1>_out\" 1) (AP \"bakery|pc<*1*><1>_out\" 0))) (And (And (Eq (AP \"bakery|pc<*0*><2>_out\" 0) (AP \"bakery|pc<*1*><2>_out\" 1)) (Eq (AP \"bakery|pc<*0*><2>_out\" 1) (AP \"bakery|pc<*1*><2>_out\" 0))) (And (Eq (AP \"bakery|pc<*0*><3>_out\" 0) (AP \"bakery|pc<*1*><3>_out\" 1)) (Eq (AP \"bakery|pc<*0*><3>_out\" 1) (AP \"bakery|pc<*1*><3>_out\" 0)))))))))" ./good_bakery.plain.aag -pdr -cex

Experiment Sym3. good_bakery.atom.v  checked for symmetry property (2.). Found counterexample in 69.12 seconds: experiment3.cex

./../../../mchyper.py -f "Forall (Forall (Implies (G (And (And (Implies (AP \"select<1>\" 0) (Neg (AP \"select<0>\" 0))) (Implies (AP \"select<1>\" 1) (Neg (AP \"select<0>\" 1)))) (And (And (Eq (AP \"select<1>\" 0) (AP \"select<1>\" 1)) (Implies (Neg (AP \"select<1>\" 0)) (Neq (AP \"select<0>\" 0) (AP \"select<0>\" 1)))) (Eq (AP \"pause\" 0) (AP \"pause\" 1))))) (G (And (And (Eq (AP \"bakery|pc<*0*><0>_out\" 0) (AP \"bakery|pc<*1*><0>_out\" 1)) (Eq (AP \"bakery|pc<*0*><0>_out\" 1) (AP \"bakery|pc<*1*><0>_out\" 0))) (And (And (Eq (AP \"bakery|pc<*0*><1>_out\" 0) (AP \"bakery|pc<*1*><1>_out\" 1)) (Eq (AP \"bakery|pc<*0*><1>_out\" 1) (AP \"bakery|pc<*1*><1>_out\" 0))) (And (And (Eq (AP \"bakery|pc<*0*><2>_out\" 0) (AP \"bakery|pc<*1*><2>_out\" 1)) (Eq (AP \"bakery|pc<*0*><2>_out\" 1) (AP \"bakery|pc<*1*><2>_out\" 0))) (And (Eq (AP \"bakery|pc<*0*><3>_out\" 0) (AP \"bakery|pc<*1*><3>_out\" 1)) (Eq (AP \"bakery|pc<*0*><3>_out\" 1) (AP \"bakery|pc<*1*><3>_out\" 0)))))))))" ./good_bakery.atom.aag -pdr -cex

Experiment Sym4. good_bakery.atom.nondet.v   checked for symmetry property (3.). Found counterexample in 26.31 seconds: experiment4.cex

./../../../mchyper.py -f "Forall (Forall (Implies (G (And (And (Eq (AP \"sym_break<1>\" 0) (AP \"sym_break<1>\" 1)) (And (And (Implies (AP \"sym_break<1>\" 0) (AP \"sym_break<0>\" 0)) (Implies (AP \"sym_break<1>\" 1) (AP \"sym_break<0>\" 1))) (Implies (Neg (AP \"sym_break<1>\" 0)) (Neq (AP \"sym_break<0>\" 0) (AP \"sym_break<0>\" 1))))) (And (And (Implies (AP \"select<1>\" 0) (Neg (AP \"select<0>\" 0))) (Implies (AP \"select<1>\" 1) (Neg (AP \"select<0>\" 1)))) (And (And (Eq (AP \"select<1>\" 0) (AP \"select<1>\" 1)) (Implies (Neg (AP \"select<1>\" 0)) (Neq (AP \"select<0>\" 0) (AP \"select<0>\" 1)))) (Eq (AP \"pause\" 0) (AP \"pause\" 1)))))) (G (And (And (Eq (AP \"bakery|pc<*0*><0>_out\" 0) (AP \"bakery|pc<*1*><0>_out\" 1)) (Eq (AP \"bakery|pc<*0*><0>_out\" 1) (AP \"bakery|pc<*1*><0>_out\" 0))) (And (And (Eq (AP \"bakery|pc<*0*><1>_out\" 0) (AP \"bakery|pc<*1*><1>_out\" 1)) (Eq (AP \"bakery|pc<*0*><1>_out\" 1) (AP \"bakery|pc<*1*><1>_out\" 0))) (And (And (Eq (AP \"bakery|pc<*0*><2>_out\" 0) (AP \"bakery|pc<*1*><2>_out\" 1)) (Eq (AP \"bakery|pc<*0*><2>_out\" 1) (AP \"bakery|pc<*1*><2>_out\" 0))) (And (Eq (AP \"bakery|pc<*0*><3>_out\" 0) (AP \"bakery|pc<*1*><3>_out\" 1)) (Eq (AP \"bakery|pc<*0*><3>_out\" 1) (AP \"bakery|pc<*1*><3>_out\" 0)))))))))" ./good_bakery.atom.nondet.aag -pdr -cex

Experiment Sym5. good_bakery.atom.nondet2.v   checked for symmetry property (3.). Property proved in 66.41 seconds: experiment5.inv

./../../../mchyper.py -f "Forall (Forall (Implies (G (And (And (Eq (AP \"sym_break<1>\" 0) (AP \"sym_break<1>\" 1)) (And (And (Implies (AP \"sym_break<1>\" 0) (Neg (AP \"sym_break<0>\" 0))) (Implies (AP \"sym_break<1>\" 1) (Neg (AP \"sym_break<0>\" 1)))) (Implies (Neg (AP \"sym_break<1>\" 0)) (Neq (AP \"sym_break<0>\" 0) (AP \"sym_break<0>\" 1))))) (And (And (Implies (AP \"select<1>\" 0) (Neg (AP \"select<0>\" 0))) (Implies (AP \"select<1>\" 1) (Neg (AP \"select<0>\" 1)))) (And (And (Eq (AP \"select<1>\" 0) (AP \"select<1>\" 1)) (Implies (Neg (AP \"select<1>\" 0)) (Neq (AP \"select<0>\" 0) (AP \"select<0>\" 1)))) (Eq (AP \"pause\" 0) (AP \"pause\" 1)))))) (G (And (And (Eq (AP \"bakery|pc<*0*><0>_out\" 0) (AP \"bakery|pc<*1*><0>_out\" 1)) (Eq (AP \"bakery|pc<*0*><0>_out\" 1) (AP \"bakery|pc<*1*><0>_out\" 0))) (And (And (Eq (AP \"bakery|pc<*0*><1>_out\" 0) (AP \"bakery|pc<*1*><1>_out\" 1)) (Eq (AP \"bakery|pc<*0*><1>_out\" 1) (AP \"bakery|pc<*1*><1>_out\" 0))) (And (And (Eq (AP \"bakery|pc<*0*><2>_out\" 0) (AP \"bakery|pc<*1*><2>_out\" 1)) (Eq (AP \"bakery|pc<*0*><2>_out\" 1) (AP \"bakery|pc<*1*><2>_out\" 0))) (And (Eq (AP \"bakery|pc<*0*><3>_out\" 0) (AP \"bakery|pc<*1*><3>_out\" 1)) (Eq (AP \"bakery|pc<*0*><3>_out\" 1) (AP \"bakery|pc<*1*><3>_out\" 0)))))))))" ./good_bakery.atom.nondet2.aag -pdr -cex

Experiment Sym6. good_bakery.atom.nondet2.v   checked for symmetry property (4.)  (Weak Until). Property proved in 16.83 seconds: experiment6.inv

./../../../mchyper.py -f "Forall (Forall (WUntil (And (And (Eq (AP \"bakery|pc<*0*><0>_out\" 0) (AP \"bakery|pc<*1*><0>_out\" 1)) (Eq (AP \"bakery|pc<*0*><0>_out\" 1) (AP \"bakery|pc<*1*><0>_out\" 0))) (And (And (Eq (AP \"bakery|pc<*0*><1>_out\" 0) (AP \"bakery|pc<*1*><1>_out\" 1)) (Eq (AP \"bakery|pc<*0*><1>_out\" 1) (AP \"bakery|pc<*1*><1>_out\" 0))) (And (And (Eq (AP \"bakery|pc<*0*><2>_out\" 0) (AP \"bakery|pc<*1*><2>_out\" 1)) (Eq (AP \"bakery|pc<*0*><2>_out\" 1) (AP \"bakery|pc<*1*><2>_out\" 0))) (And (Eq (AP \"bakery|pc<*0*><3>_out\" 0) (AP \"bakery|pc<*1*><3>_out\" 1)) (Eq (AP \"bakery|pc<*0*><3>_out\" 1) (AP \"bakery|pc<*1*><3>_out\" 0)))))) (Neg (And (And (Eq (AP \"sym_break<1>\" 0) (AP \"sym_break<1>\" 1)) (And (And (Implies (AP \"sym_break<1>\" 0) (Neg (AP \"sym_break<0>\" 0))) (Implies (AP \"sym_break<1>\" 1) (Neg (AP \"sym_break<0>\" 1)))) (Implies (Neg (AP \"sym_break<1>\" 0)) (Neq (AP \"sym_break<0>\" 0) (AP \"sym_break<0>\" 1))))) (And (And (Implies (AP \"select<1>\" 0) (Neg (AP \"select<0>\" 0))) (Implies (AP \"select<1>\" 1) (Neg (AP \"select<0>\" 1)))) (And (And (Eq (AP \"select<1>\" 0) (AP \"select<1>\" 1)) (Implies (Neg (AP \"select<1>\" 0)) (Neq (AP \"select<0>\" 0) (AP \"select<0>\" 1)))) (Eq (AP \"pause\" 0) (AP \"pause\" 1))))))))" ./good_bakery.atom.nondet2.aag -pdr

Experiment Sym7. good_bakery.atom.nondet2.5proc.v  checked for symmetry property (5.). Property proved in 97.45 seconds: experiment7.inv

./../../../mchyper.py -f "Forall (Forall (Implies (G (And (And (And (And (Eq (AP \"sym_break<2>\" 0) (AP \"sym_break<2>\" 1)) (Eq (AP \"sym_break<1>\" 0) (AP \"sym_break<1>\" 1))) (And (And (And (Implies (AP \"sym_break<2>\" 0) (And (Neg (AP \"sym_break<1>\" 0)) (Neg (AP \"sym_break<0>\" 0)))) (Implies (AP \"sym_break<2>\" 1) (And (Neg (AP \"sym_break<1>\" 1)) (Neg (AP \"sym_break<0>\" 1))))) (And (Implies (AP \"sym_break<1>\" 0) (Neg (AP \"sym_break<0>\" 0))) (Implies (AP \"sym_break<1>\" 1) (Neg (AP \"sym_break<0>\" 1))))) (Implies (And (Neg (AP \"sym_break<2>\" 0)) (Neg (AP \"sym_break<1>\" 0))) (Neq (AP \"sym_break<0>\" 0) (AP \"sym_break<0>\" 1))))) (And (And (Eq (AP \"select<2>\" 0) (AP \"select<2>\" 1)) (Eq (AP \"select<1>\" 0) (AP \"select<1>\" 1))) (And (And (And (Implies (AP \"select<2>\" 0) (And (Neg (AP \"select<1>\" 0)) (Neg (AP \"select<0>\" 0)))) (Implies (AP \"select<1>\" 1) (And (Neg (AP \"select<1>\" 1)) (Neg (AP \"select<0>\" 1))))) (And (Implies (AP \"select<1>\" 0) (Neg (AP \"select<0>\" 0))) (Implies (AP \"select<2>\" 1) (Neg (AP \"select<0>\" 1))))) (Implies (And (Neg (AP \"select<2>\" 0)) (Neg (AP \"select<1>\" 0))) (Neq (AP \"select<0>\" 0) (AP \"select<0>\" 1)))))) (Eq (AP \"pause\" 0) (AP \"pause\" 1)))) (G (And (And (Eq (AP \"bakery|pc<*0*><0>_out\" 0) (AP \"bakery|pc<*1*><0>_out\" 1)) (Eq (AP \"bakery|pc<*0*><0>_out\" 1) (AP \"bakery|pc<*1*><0>_out\" 0))) (And (And (Eq (AP \"bakery|pc<*0*><1>_out\" 0) (AP \"bakery|pc<*1*><1>_out\" 1)) (Eq (AP \"bakery|pc<*0*><1>_out\" 1) (AP \"bakery|pc<*1*><1>_out\" 0))) (And (And (Eq (AP \"bakery|pc<*0*><2>_out\" 0) (AP \"bakery|pc<*1*><2>_out\" 1)) (Eq (AP \"bakery|pc<*0*><2>_out\" 1) (AP \"bakery|pc<*1*><2>_out\" 0))) (And (Eq (AP \"bakery|pc<*0*><3>_out\" 0) (AP \"bakery|pc<*1*><3>_out\" 1)) (Eq (AP \"bakery|pc<*0*><3>_out\" 1) (AP \"bakery|pc<*1*><3>_out\" 0)))))))))" ./good_bakery.atom.nondet2.proc5.aag -pdr -cex

Experiment Sym8. good_bakery.atom.nondet2.proc5.v  checked for symmetry property (6.). Property proved in 13.59 seconds: experiment8.inv

./../../../mchyper.py -f "Forall (Forall (WUntil (And (And (Eq (AP \"bakery|pc<*0*><0>_out\" 0) (AP \"bakery|pc<*1*><0>_out\" 1)) (Eq (AP \"bakery|pc<*0*><0>_out\" 1) (AP \"bakery|pc<*1*><0>_out\" 0))) (And (And (Eq (AP \"bakery|pc<*0*><1>_out\" 0) (AP \"bakery|pc<*1*><1>_out\" 1)) (Eq (AP \"bakery|pc<*0*><1>_out\" 1) (AP \"bakery|pc<*1*><1>_out\" 0))) (And (And (Eq (AP \"bakery|pc<*0*><2>_out\" 0) (AP \"bakery|pc<*1*><2>_out\" 1)) (Eq (AP \"bakery|pc<*0*><2>_out\" 1) (AP \"bakery|pc<*1*><2>_out\" 0))) (And (Eq (AP \"bakery|pc<*0*><3>_out\" 0) (AP \"bakery|pc<*1*><3>_out\" 1)) (Eq (AP \"bakery|pc<*0*><3>_out\" 1) (AP \"bakery|pc<*1*><3>_out\" 0)))))) (Neg (And (And (And (And (Eq (AP \"sym_break<2>\" 0) (AP \"sym_break<2>\" 1)) (Eq (AP \"sym_break<1>\" 0) (AP \"sym_break<1>\" 1))) (And (And (And (Implies (AP \"sym_break<2>\" 0) (And (Neg (AP \"sym_break<1>\" 0)) (Neg (AP \"sym_break<0>\" 0)))) (Implies (AP \"sym_break<2>\" 1) (And (Neg (AP \"sym_break<1>\" 1)) (Neg (AP \"sym_break<0>\" 1))))) (And (Implies (AP \"sym_break<1>\" 0) (Neg (AP \"sym_break<0>\" 0))) (Implies (AP \"sym_break<1>\" 1) (Neg (AP \"sym_break<0>\" 1))))) (Implies (And (Neg (AP \"sym_break<2>\" 0)) (Neg (AP \"sym_break<1>\" 0))) (Neq (AP \"sym_break<0>\" 0) (AP \"sym_break<0>\" 1))))) (And (And (Eq (AP \"select<2>\" 0) (AP \"select<2>\" 1)) (Eq (AP \"select<1>\" 0) (AP \"select<1>\" 1))) (And (And (And (Implies (AP \"select<2>\" 0) (And (Neg (AP \"select<1>\" 0)) (Neg (AP \"select<0>\" 0)))) (Implies (AP \"select<1>\" 1) (And (Neg (AP \"select<1>\" 1)) (Neg (AP \"select<0>\" 1))))) (And (Implies (AP \"select<1>\" 0) (Neg (AP \"select<0>\" 0))) (Implies (AP \"select<2>\" 1) (Neg (AP \"select<0>\" 1))))) (Implies (And (Neg (AP \"select<2>\" 0)) (Neg (AP \"select<1>\" 0))) (Neq (AP \"select<0>\" 0) (AP \"select<0>\" 1)))))) (Eq (AP \"pause\" 0) (AP \"pause\" 1))))))" ./good_bakery.atom.nondet2.proc5.aag -pdr -cex

Experiment Sym9. good_bakery.atom.nondet2.proc7.v checked for symmetry (7.). Did not terminate within 12 hours (but: see below).

./../../../mchyper.py -f "Forall (Forall (WUntil ((And (And (Eq (AP \"bakery|pc<*0*><0>_out\" 0) (AP \"bakery|pc<*1*><0>_out\" 1)) (Eq (AP \"bakery|pc<*0*><0>_out\" 1) (AP \"bakery|pc<*1*><0>_out\" 0))) (And (And (Eq (AP \"bakery|pc<*0*><1>_out\" 0) (AP \"bakery|pc<*1*><1>_out\" 1)) (Eq (AP \"bakery|pc<*0*><1>_out\" 1) (AP \"bakery|pc<*1*><1>_out\" 0))) (And (And (Eq (AP \"bakery|pc<*0*><2>_out\" 0) (AP \"bakery|pc<*1*><2>_out\" 1)) (Eq (AP \"bakery|pc<*0*><2>_out\" 1) (AP \"bakery|pc<*1*><2>_out\" 0))) (And (Eq (AP \"bakery|pc<*0*><3>_out\" 0) (AP \"bakery|pc<*1*><3>_out\" 1)) (Eq (AP \"bakery|pc<*0*><3>_out\" 1) (AP \"bakery|pc<*1*><3>_out\" 0))))))) (Neg (And (And (And (Neg (And (AP \"sym_break<2>\" 1) (And (AP \"sym_break<1>\" 1) (AP \"sym_break<0>\" 1)))) (And (And (Eq (AP \"sym_break<2>\" 0) (AP \"sym_break<2>\" 1)) (Eq (AP \"sym_break<1>\" 0) (AP \"sym_break<1>\" 1))) (Eq (And (Neg (AP \"sym_break<2>\" 0)) (Neg (AP \"sym_break<1>\" 0))) (Neq (AP \"sym_break<0>\" 0) (AP \"sym_break<0>\" 1))))) (And (Neg (And (AP \"select<2>\" 1) (And (AP \"select<1>\" 1) (AP \"select<0>\" 1)))) (And (And (Eq (AP \"select<2>\" 0) (AP \"select<2>\" 1)) (Eq (AP \"select<1>\" 0) (AP \"select<1>\" 1))) (Eq (And (Neg (AP \"select<2>\" 0)) (Neg (AP \"select<1>\" 0))) (Neq (AP \"select<0>\" 0) (AP \"select<0>\" 1)))))) (Eq (AP \"pause\" 0) (AP \"pause\" 1))))))" ./good_bakery.atom.nondet2.proc7.aag -pdr -cex

The experiment could be made to terminate, however, when using the ABC verification command "pdr -v -z -r" that uses a stronger form of generalization in IC3. Here is the output provided by ABC:

Invariant F[28] : 4039 clauses with 191 flops (out of 551)
Verification of invariant with 4039 clauses was successful.  Time =     0.47 sec
Block =  389  Oblig = 56194  Clause = 30875  Call =1103664 (sat=67.2%)  Start =3661
SAT solving =   267.29 sec ( 85.54 %)
  unsat     =    53.59 sec ( 17.15 %)
  sat       =   213.69 sec ( 68.39 %)
Generalize  =   180.49 sec ( 57.76 %)
Push clause =   109.95 sec ( 35.19 %)
Ternary sim =     4.90 sec (  1.57 %)
Containment =     2.52 sec (  0.81 %)
CNF compute =    12.19 sec (  3.90 %)
TOTAL       =   312.46 sec (100.00 %)
Property proved.  Time =   312.53 sec





[Not used as an experiment in the paper:] good_bakery.atom.nondet2.proc30.v checked for symmetry properties (8.). Did not terminate within 2 hours.

./../../../mchyper.py -f "Forall (Forall (WUntil (And (And (Eq (AP \"bakery|pc<*0*><0>_out\" 0) (AP \"bakery|pc<*1*><0>_out\" 1)) (Eq (AP \"bakery|pc<*0*><0>_out\" 1) (AP \"bakery|pc<*1*><0>_out\" 0))) (And (And (Eq (AP \"bakery|pc<*0*><1>_out\" 0) (AP \"bakery|pc<*1*><1>_out\" 1)) (Eq (AP \"bakery|pc<*0*><1>_out\" 1) (AP \"bakery|pc<*1*><1>_out\" 0))) (And (And (Eq (AP \"bakery|pc<*0*><2>_out\" 0) (AP \"bakery|pc<*1*><2>_out\" 1)) (Eq (AP \"bakery|pc<*0*><2>_out\" 1) (AP \"bakery|pc<*1*><2>_out\" 0))) (And (Eq (AP \"bakery|pc<*0*><3>_out\" 0) (AP \"bakery|pc<*1*><3>_out\" 1)) (Eq (AP \"bakery|pc<*0*><3>_out\" 1) (AP \"bakery|pc<*1*><3>_out\" 0))))))   (Neg (And (And (And (Neg (And (AP \"sym_break<4>\" 1) (And (AP \"sym_break<3>\" 1) (And (AP \"sym_break<2>\" 1) (And (AP \"sym_break<1>\" 1) (AP \"sym_break<0>\" 1)))))) (And (And (Eq (AP \"sym_break<4>\" 0) (AP \"sym_break<4>\" 1)) (And (Eq (AP \"sym_break<3>\" 0) (AP \"sym_break<3>\" 1)) (And (Eq (AP \"sym_break<2>\" 0) (AP \"sym_break<2>\" 1)) (Eq (AP \"sym_break<1>\" 0) (AP \"sym_break<1>\" 1))))) (Eq (And (Neg (AP \"sym_break<4>\" 0)) (And (Neg (AP \"sym_break<3>\" 0)) (And (Neg (AP \"sym_break<2>\" 0)) (Neg (AP \"sym_break<1>\" 0))))) (Neq (AP \"sym_break<0>\" 0) (AP \"sym_break<0>\" 1))))) (And (Neg (And (AP \"select<4>\" 1) (And (AP \"select<3>\" 1) (And (AP \"select<2>\" 1) (And (AP \"select<1>\" 1) (AP \"select<0>\" 1)))))) (And (And (Eq (AP \"select<4>\" 0) (AP \"select<4>\" 1)) (And (Eq (AP \"select<3>\" 0) (AP \"select<3>\" 1)) (And (Eq (AP \"select<2>\" 0) (AP \"select<2>\" 1)) (Eq (AP \"select<1>\" 0) (AP \"select<1>\" 1))))) (Eq (And (Neg (AP \"select<4>\" 0)) (And (Neg (AP \"select<3>\" 0)) (And (Neg (AP \"select<2>\" 0)) (Neg (AP \"select<1>\" 0))))) (Neq (AP \"select<0>\" 0) (AP \"select<0>\" 1)))))) (Eq (AP \"pause\" 0) (AP \"pause\" 1))))))" ./good_bakery.atom.nondet2.proc30.aag -pdr -cex

